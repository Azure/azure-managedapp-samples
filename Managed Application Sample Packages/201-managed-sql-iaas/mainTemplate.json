{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "addressPrefix": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "subnetPrefix": {
            "type": "string"
        },
        "publicIpAddressName": {
            "type": "string"
        },
        "dnsName": {
            "type": "string"
        }
    },
    "variables": {
        "sqlPortNumber": 1433,
        "networkInterfaceName": "sqlNic",
        "networkSecurityGroupName": "sqlNsg",
        "publicIpAddresstype": "Dynamic",
        "publicIpAddressSku": "Basic",
        "sqlConnectivityType": "Private",
        "sqlStorageDisksCount": 1,
        "sqlStorageWorkloadType": "GENERAL",
        "sqlStorageDisksConfigurationType": "NEW",
        "sqlStorageStartingDeviceId": 2,
        "sqlStorageDeploymentToken": 98818,
        "sqlAutoPatchingDayOfWeek": "Sunday",
        "sqlAutopatchingStartHour": 2,
        "sqlAutopatchingWindowDuration": 60,
        "sqlAutobackupRetentionPeriod": 30,
        "sqlAutoBackupStorageAccountName": "[toLower(concat('bak', uniqueString(resourceGroup().id),'2'))]",
        "sqlAutobackupStorageAccountType": "Standard_LRS",
        "backupSystemDBs": "true",
        "backupScheduleType": "Automated",
        "rServicesEnabled": "false",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftSQLServer",
                        "offer": "SQL2017-WS2016",
                        "sku": "Enterprise",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "createOption": "empty",
                            "lun": 0,
                            "diskSizeGB": "1023",
                            "caching": "ReadOnly",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'), '/SqlIaasExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "type": "SqlIaaSAgent",
                "publisher": "Microsoft.SqlServer.Management",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "AutoTelemetrySettings": {
                        "Region": "[parameters('location')]"
                    },
                    "AutoPatchingSettings": {
                        "PatchCategory": "WindowsMandatoryUpdates",
                        "Enable": true,
                        "DayOfWeek": "[variables('sqlAutopatchingDayOfWeek')]",
                        "MaintenanceWindowStartingHour": "[variables('sqlAutopatchingStartHour')]",
                        "MaintenanceWindowDuration": "[variables('sqlAutopatchingWindowDuration')]"
                    },
                    "AutoBackupSettings": {
                        "Enable": true,
                        "RetentionPeriod": "[variables('sqlAutobackupRetentionPeriod')]",
                        "EnableEncryption": true,
                        "BackupSystemDbs": "[variables('backupSystemDbs')]",
                        "BackupScheduleType": "[variables('backupScheduleType')]"
                    },
                    "KeyVaultCredentialSettings": {
                        "Enable": false,
                        "CredentialName": ""
                    },
                    "ServerConfigurationsManagementSettings": {
                        "SQLConnectivityUpdateSettings": {
                            "ConnectivityType": "[variables('sqlConnectivityType')]",
                            "Port": "[variables('sqlPortNumber')]"
                        },
                        "SQLWorkloadTypeUpdateSettings": {
                            "SQLWorkloadType": "[variables('sqlStorageWorkloadType')]"
                        },
                        "SQLStorageUpdateSettings": {
                            "DiskCount": "[variables('sqlStorageDisksCount')]",
                            "NumberOfColumns": "[variables('sqlStorageDisksCount')]",
                            "StartingDeviceID": "[variables('sqlStorageStartingDeviceId')]",
                            "DiskConfigurationType": "[variables('sqlStorageDisksConfigurationType')]"
                        },
                        "AdditionalFeaturesServerConfigurations": {
                            "IsRServicesEnabled": "[variables('rServicesEnabled')]"
                        }
                    }
                },
                "protectedSettings": {
                    "StorageUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('sqlAutobackupStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]",
                    "StorageAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('sqlAutobackupStorageAccountName')), '2015-06-15').key1]",
                    "Password": "[parameters('adminPassword')]"
                }
            }
        },
        {
            "name": "[variables('sqlAutobackupStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('sqlAutobackupStorageAccountType')]"
            }
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
                "dnsSettings":{
                    "domainNameLabel": "[parameters('dnsName')]"
                }
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "sqlEndpoint": {
            "type": "string",
            "value": "[reference(concat(parameters('publicIPAddressName'))).dnsSettings.fqdn]"
        },
        "sqlPort": {
            "type": "int",
            "value": "[variables('sqlPortNumber')]"
        }        
    }
}