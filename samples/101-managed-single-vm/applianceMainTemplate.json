{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "",
            "minLength": 3,
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "localAdminUserName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Local admin Username for the Virtual Machine."
            }
        },
        "localAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "minLength": 1,
            "metadata": {
                "description": "Local admin Password for the Virtual Machine."
            }
        },
        "domainJoinUserName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Account for domain joining, ex. Domain\\serviceaccount"
            }
        },
        "domainJoinPassword": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Password for domain joining"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "allowedValues": [
                "MicrosoftWindowsServer"
            ],
            "metadata": {
                "description": "OS Image Publisher. https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "allowedValues": [
                "WindowsServer"
            ],
            "metadata": {
                "description": "See image publisher notes for details"
            }
        },
        "sku": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "2012-R2-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "metadata": {
                "description": "Find available skus from PowerShell, https://docs.microsoft.com/en-us/powershell/resourcemanager/azurerm.compute/v1.3.4/Get-AzureRmVMImageSku?redirectedfrom=msdn"
            }
        },
        "DiskConfig": {
            "type": "string",
            "defaultValue": "Win",
            "allowedValues": [
                "Win",
                "IIS"
            ],
            "metadata": {
                "description": "Choose Windows or IIS VM"
            }
        },
        "DiskCount": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16"
            ],
            "defaultValue": "1",
            "metadata": {
                "description": "Number of Data Disks to be attached to VM."
            }
        },
        "DiskSize": {
            "type": "int",
            "defaultValue": 200,
            "minValue": 10,
            "maxValue": 1024,
            "metadata": {
                "Description": "Size of Data Disk(s) attached to the VM in GB, Min of 10 and Max of 1024"
            }
        },
        "userImageStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specify an existing storage account where the VM image(s) will be created, example: mystorage"
            }
        },
        "StorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
            }
        },
        "domainName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Organizational Unit the VM will join"
            }
        },
        "CiOwner": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "",
            "metadata": {
                "description": "CiOwner tag for the Virtual Machine. use your Alias, Domain\\[Alias]"
            }
        },
        "CiAnalystGroup": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "",
            "metadata": {
                "description": "CiAnalystGroup tag for the Virtual Machine. Please contact your Cloud Lead if you don't know this value.  Format: Config Analyst: Org1 - Org2 -Org3 - Org4"
            }
        },
        "appID": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "",
            "metadata": {
                "description": "appID tag for the Virtual Machine."
            }
        },
        "orgID": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "",
            "metadata": {
                "description": "orgID tag for the Virtual Machine."
            }
        },
        "env": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "environment tag for the Virtual Machine."
            }
        },
        "localAdmins": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Users and groups added to the local administrator group.  "
            }
        },
        "virtualNetwork": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name for the VirtualNetwork"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "ERNetwork",
            "metadata": {
                "description": "Name for the Resource Group that contains VirtualNetwork."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet-1",
            "metadata": {
                "description": "Name for the subnet"
            }
        },
        "PullServerRegistrationKey": {
            "type": "string",
            "metadata": {
                "description": "The key for the Pull server the VM will join"
            }
        },
        "PullServerRegistrationURI": {
            "type": "string",
            "metadata": {
                "description": "The pull server URI"
            }
        }
    },
    "variables": {
        "apiVersion": "2015-01-01",
        "scriptsURL": "[uri(deployment().properties.templateLink.uri,'scripts/')]",
        "nestedURL": "[uri(deployment().properties.templateLink.uri,'nestedtemplates/')]",
        "createVMtemplate": "template-SingleVM.json",
        "createStoragetemplate": "template-Storage.json",
        "configurePullTemplate": "template-ConfigureDscPull.json",
        "userImageStorageAccountName": "[parameters('userImageStorageAccountName')]",
        "Role": "[substring(parameters('DiskConfig'),0,3)]",
        "CreateVMUrl": "[concat(variables('nestedURL'),variables('createVMtemplate'))]",
        "CreateStorageUrl": "[concat(variables('nestedURL'),variables('createStoragetemplate'))]",
        "AttachVMtoPullServerURL": "[concat(variables('nestedURL'),variables('configurePullTemplate'))]",
        "BuildMachineRoleURL": "[concat(variables('nestedURL'),'template-Build',variables('Role'), '.json')]",
        "AzureAutomation": {
            "Url": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
            "RegistrationKey": "[parameters('PullServerRegistrationKey')]",
            "registrationUrl": "[parameters('PullServerRegistrationURI')]",
            "nodeConfigurationName": "MSITNoPAK.ISRM_GC",
            "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
            "timestamp": "1/1/2015"
        }
    },
    "resources": [
        {
            "apiVersion": "2015-01-01",
            "name": "[concat('CreateStorage-',parameters('userImageStorageAccountName'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('CreateStorageUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "userImageStorageAccountName": {
                        "value": "[parameters('userImageStorageAccountName')]"
                    },
                    "StorageAccountType": {
                        "value": "[parameters('StorageAccountType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "[concat(parameters('vmName'),'-CreateVM')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('CreateVMUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "localAdminUserName": {
                        "value": "[parameters('localAdminUserName')]"
                    },
                    "localAdminPassword": {
                        "value": "[parameters('localAdminPassword')]"
                    },
                    "domainJoinUserName": {
                        "value": "[parameters('domainJoinUserName')]"
                    },
                    "domainJoinPassword": {
                        "value": "[parameters('domainJoinPassword')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "DiskConfig": {
                        "value": "[parameters('DiskConfig')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "DiskCount": {
                        "value": "[parameters('DiskCount')]"
                    },
                    "DiskSize": {
                        "value": "[parameters('DiskSize')]"
                    },
                    "numberOfInstances": {
                        "value": 1
                    },
                    "imagePublisher": {
                        "value": "[parameters('imagePublisher')]"
                    },
                    "imageOffer": {
                        "value": "[parameters('imageOffer')]"
                    },
                    "sku": {
                        "value": "[parameters('sku')]"
                    },
                    "userImageStorageAccountName": {
                        "value": "[parameters('userImageStorageAccountName')]"
                    },
                    "StorageAccountType": {
                        "value": "[parameters('StorageAccountType')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "CiOwner": {
                        "value": "[parameters('CiOwner')]"
                    },
                    "CiAnalystGroup": {
                        "value": "[parameters('CiAnalystGroup')]"
                    },
                    "appID": {
                        "value": "[parameters('appID')]"
                    },
                    "orgID": {
                        "value": "[parameters('orgID')]"
                    },
                    "env": {
                        "value": "[parameters('env')]"
                    },
                    "localAdmins": {
                        "value": "[parameters('localAdmins')]"
                    },
                    "SQLAdmins": {
                        "value": ""
                    },
                    "virtualNetwork": {
                        "value": "[parameters('virtualNetwork')]"
                    },
                    "vnetResourceGroup": {
                        "value": "[parameters('vnetResourceGroup')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "ouPath": {
                        "value": "[parameters('ouPath')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/','CreateStorage-',parameters('userImageStorageAccountName'))]"
            ]
        },
        {
            "apiVersion": "2015-01-01",
            "name": "[concat(parameters('vmName'),'-BuildMachineRole-',variables('Role'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('BuildMachineRoleURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "DiskConfig": {
                        "value": "[parameters('DiskConfig')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "DiskCount": {
                        "value": "[parameters('DiskCount')]"
                    },
                    "DiskSize": {
                        "value": "[parameters('DiskSize')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
            ]
        },
        {
            "apiVersion": "2015-01-01",
            "name": "[concat(parameters('vmName'),'-AttachVMtoPullServer')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('AttachVMtoPullServerURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "RegistrationKey": {
                        "value": "[variables('AzureAutomation').RegistrationKey]"
                    },
                    "registrationUrl": {
                        "value": "[variables('AzureAutomation').registrationUrl]"
                    },
                    "nodeConfigurationName": {
                        "value": "[variables('AzureAutomation').nodeConfigurationName]"
                    },
                    "timestamp": {
                        "value": "[variables('AzureAutomation').timestamp]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-BuildMachineRole-',variables('Role'))]"
            ]
        }
    ]
}